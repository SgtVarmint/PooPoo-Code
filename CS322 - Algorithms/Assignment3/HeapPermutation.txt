----- n=2 -----
n==2,i==0:			for(i=0;i<2;i++)
					heapPermute(A,1)
	n==1:				print("1 2")
n==2:				swap(A[0], A[1])// [1,2] -> [2,1]
i==1:				heapPermute(A, 1)
	n==1:				print("2 1")
n==2:				swap(A[0], A[1])// [1,2] -> [2,1]
i==2:	----DONE----
			
			
----- n=3 -----
n==3, i==0:				for(i=0;i<3;i++)
						heapPermute(A,2)
	n==2, i==0:				for(i=0;i<2;i++)
							heapPermute(A,1)
		n==1:					print("1 2 3")
	n==2:					swap(A[0], A[1])// [1,2,3] -> [2,1,3]
							heapPermute(A,1)
		n==1:					print("2 1 3")
	n==2, i==1:				swap(A[1], A[1])// no permutation

n==3:					swap(A[0], A[2])// [2,1,3] -> [3,1,2]
i==1:					heapPermute(A,2)
	n==2, i==0:				heapPermute(A,1)
		n==1:					print("3 1 2")
	n==2:					swap(A[0], A[1])
	i==1:					heapPermute(A,1)
		n==1:					print("1 3 2")
	n==2:					swap(A[1], A[1])// no permutation
	
n==3:					swap(A[0],A[2])// [1 3 2] -> [2 3 1]
i==2:					heapPermute(A,2)
	n==2, i==0:				heapPermute(A,1)
		n==1:					print("2 3 1")
	n==2:					swap(A[0], A[1])// [2 3 1] -> [3 2 1]
	i==1:					heapPermute(A,1)
		n==1:					print("3 2 1")
	n==2:					swap(A[1], A[1])// no permutation
	i==2:
n==3, i==3: --- DONE ----


----- n=4 -----
n==4, i==0:					for(i=0;i<4;i++)
							heapPermute(A,3)
	n==3, i==0:					heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("1 2 3 4")						[1,2,3,4]
		n==2:						swap(A[0], A[1])
		i==1:						heapPermute(A,1)
			n==1:						print("2 1 3 4")						[2,1,3,4]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:						
	n==3:						swap(A[0], A[2])// [2,1,3,4] -> [3,1,2,4]
	i==1:						heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("3 1 2 4")						[3,1,2,4]
		n==2:						swap(A[0], A[1])// [3,1,2,4] -> [1,3,2,4]
		i==1:						heapPermute(A,1)
			n==1:						print("1 3 2 4")						[1,3,2,4]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:						
	n==3:						swap(A[0], A[2])// [1,3,2,4] -> [2,3,1,4]
	i==2:						heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("2 3 1 4")						[2,3,1,4]
		n==2:						swap(A[0], A[1])// [2,3,1,4] -> [3,2,1,4]
		i==1:						heapPermute(A,1)
			n==1:						print("3 2 1 4")						[3,2,1,4]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:						
	n==3:						swap(A[0], A[2])// [3,2,1,4] -> [1,2,3,4]
	i==3:						
	
n==4, i==0:					swap(A[0], A[3])// [1,2,3,4] -> [4,2,3,1]
i==1:						heapPermute(A,3)
	n==3, i==0:					heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("4 2 3 1")						[4,2,3,1]
		n==2:						swap(A[0], A[1])// [4,2,3,1] -> [2,4,3,1]
		i==1:						heapPermute(A,1)
			n==1:						print("2 4 3 1")						[2,4,3,1]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:						
	n==3:						swap(A[0], A[2])// [2,4,3,1] -> [3,4,2,1]
	i==1:						heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("3 4 2 1")						[3,4,2,1]
		n==2:						swap(A[0], A[1])// [3,4,2,1] -> [4,3,2,1]
		i==1:						heapPermute(A,1)
			n==1:						print("4 3 2 1")						[4,3,2,1]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:						
	n==3:						swap(A[0], A[2])// [4,3,2,1] -> [2,3,4,1]
	i==2:						heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("2 3 4 1")						[2,3,4,1]
		n==2:						swap(A[0], A[1])// [2,3,4,1] -> [3,2,4,1]
		i==1:						heapPermute(A,1)
			n==1:						print("3 2 4 1")						[3,2,4,1]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:						
	n==3:						swap(A[0], A[2])// [3,2,4,1] -> [4,2,3,1]
	i==3:						
	
n==4, i==1:					swap(A[1], A[3])// [4,2,3,1] -> [4,1,3,2]
							heapPermute(A,3)
	n==3, i==0:					heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("4 1 3 2")						[4,1,3,2]
		n==2:						swap(A[0], A[1])// [4,1,3,2] -> [1,4,3,2]
		i==1:						heapPermute(A,1)
			n==1:						print("1 4 3 2")						[1,4,3,2]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:						--- Do Nothing ---
	n==3:						swap(A[0], A[2])// [1,4,3,2] -> [3,4,1,2]
	i==1:						heapPermute(A, 2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("3 4 1 2")						[3,4,1,2]
		n==2:						swap(A[0], A[1])// [3,4,1,2] -> [4,3,1,2]
		i==1:						heapPermute(A,1)
			n==1:						print("4 3 1 2")						[4,3,1,2]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:						
	n==3:						swap(A[0], A[2])// [4,3,1,2] -> [1,3,4,2]
	i==2:						heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("1 3 4 2")						[1,3,4,2]
		n==2:						swap(A[0], A[1])// [1,3,4,2] -> [3,1,4,2]
		i==1:						heapPermute(A,1)
			n==1:						print("3 1 4 2")						[3,1,4,2]
		n==2:						swap(A[1], A[1])// no permutation
		n==2:
	n==3:						swap(A[0], A[2])// [3,1,4,2] -> [4,1,3,2]
	i==3:

n==4, i==2:					swap(A[2], A[3])// [4,1,3,2] -> [4,1,2,3]
							heapPermute(A,3)
	n==3, i==0:					heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("4 1 2 3")						[4,1,2,3]
		n==2:						swap(A[0], A[1])// [4,1,2,3] -> [1,4,2,3]
		i==1:						heapPermute(A,1)
			n==1:						print("1 4 2 3")						[1,4,2,3]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:
	n==3:						swap(A[0], A[2])// [1,4,2,3] -> [2,4,1,3]
	i==1:						heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("2 4 1 3")						[2,4,1,3]
		n==2:						swap(A[0], A[1])// [2,4,1,3] -> [4,2,1,3]
		i==1:						heapPermute(A,1)
			n==1:						print("4 2 1 3")						[4,2,1,3]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:
	n==3:						swap(A[0], A[2])// [4,2,1,3] -> [1,2,4,3]
	i==2:						heapPermute(A,2)
		n==2, i==0:					heapPermute(A,1)
			n==1:						print("1 2 4 3")						[1,2,4,3]
		n==2:						swap(A[0], A[1])// [1,2,4,3] -> [2,1,4,3]
		n==1:						heapPermute(A,1)
			n==1:						print("2 1 4 3")						[2,1,4,3]
		n==2:						swap(A[1], A[1])// no permutation
		i==2:
	n==3:						swap(A[0], A[2])
	i==3:
n==4:
i==4:						----- DONE -----